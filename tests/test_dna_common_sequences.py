import unittest
from ..dna_common_sequences import common


class Tests(unittest.TestCase):

    def test_Extra(self):
        assert common('TTGGTGTCGCTAGACC', 'CGCTAGTGGGGAAT') == 'TTGGGGAA'
        assert common('GTCGCTGTGCAGGTCCGGGTTCA', 'GCGACCCGAATCCAGCTATAGGTATATGTCAGTCGGCCGTTAGGT') == 'GCGCGTGCAGGTCCGGGTTA,GTCGCTGTGCAGTCGGGTTA'
        assert common('CCCATTCACGT', 'TGGCGACCGGGATCGTACTT') == 'CCCATCACT,CCCATTACT'
        assert common('CATATGTGTACTGC', 'GCCGACCGCTGTCATTAATATACAGTTCGAA') == 'CATATTTACGC,CATATTTACTC,CATATTTACTG,CATATTTATGC'
        assert common('GGAGTACCATGGGCGGGACGTCACAGCCCCCAACTCA', 'AAGGTGACGCAAATGGTATATTCGCTAAGGATT') == 'AGTACCATGGACGCAAGAT,AGTACCATGGACGTAAGAT,AGTACCATGGATACGCAAA,AGTACCATGGATACGCAAT,AGTACCATGGCGCTAAGAT,GGGACCATGGACGCAAGAT,GGGACCATGGACGTAAGAT,GGGACCATGGATACGCAAA,GGGACCATGGATACGCAAT,GGGACCATGGCGCTAAGAT,GGTACCATGGACGCAAGAT,GGTACCATGGACGTAAGAT,GGTACCATGGATACGCAAA,GGTACCATGGATACGCAAT,GGTACCATGGCGCTAAGAT'
        assert common('TAGTCTTCTGGTCTAAATCCCTGCAGGAATATGCAAACTGG', 'TCCTGATCTCATGGT') == 'TCCTGATCTCAGGT,TCCTGATCTCATGG,TCCTGATCTCATGT'
        assert common('AGTAATAATATGCTTCGGCTTTA', 'CGCGGGCAGTATC') == 'CCGGCTA,CCGGCTT,GCGGCTA,GCGGCTT,GGGGCTA,GGGGCTT'
        assert common('AACGTTTTGGGTTTAGAGAAAGTGCTCACAGTAGGTACGTCCCCCAGACCCCACGCCAATGTAT', 'TTTGGGAATGCAATTTAGCTCACAGAGCATACAATGAGAACCACCGAGATCATATTAAGTCTCC') == 'TTTGGGAAGAAAGCTCACAGAGTACGAGACCCCAGCAATGTT,TTTGGGAAGAAAGCTCACAGAGTACGAGACCCCAGCAATTAT,TTTGGGAAGAAAGCTCACAGAGTACTAGACCCCAGCAATGTT,TTTGGGAAGAAAGCTCACAGAGTACTAGACCCCAGCAATTAT,TTTGGGAAGAATGCTCACAGAGTACGAGACCCCAGCAATGTT,TTTGGGAAGAATGCTCACAGAGTACGAGACCCCAGCAATTAT,TTTGGGAAGAATGCTCACAGAGTACTAGACCCCAGCAATGTT,TTTGGGAAGAATGCTCACAGAGTACTAGACCCCAGCAATTAT'
        assert common('CATTCATTTACAACACTAGGGTAACACCAGCGCGATAGGCTGAGAAAACAC', 'CTCACCATTGAAGACAACCCGCTTGCGAACCGAAATGGTGACGGAACAACCCTCCCAGTT') == 'CACATTAAACAACCCGCGCGAAGGTGAGAAAACA,CACATTAAACAACCCGCGCGAAGGTGAGAAAACC,CACATTAAACAACCCGCGCGATGGTGAGAAAACA,CACATTAAACAACCCGCGCGATGGTGAGAAAACC,CACATTAAACAAGGCAACCGAAGGTGAGAAAACA,CACATTAAACAAGGCAACCGAAGGTGAGAAAACC,CACATTAAACAAGGCAACCGATGGTGAGAAAACA,CACATTAAACAAGGCAACCGATGGTGAGAAAACC,CACATTAAACAAGGGAACAAATGGTGAGAAAACA,CACATTAAACAAGGGAACAAATGGTGAGAAAACC,CACATTAAACAAGGGAACCAAAGGTGAGAAAACA,CACATTAAACAAGGGAACCAAAGGTGAGAAAACC,CACATTAAACAAGGGAACCAATGGTGAGAAAACA,CACATTAAACAAGGGAACCAATGGTGAGAAAACC,CACATTAAACAAGGGAACCGAAGGTGAGAAAACA,CACATTAAACAAGGGAACCGAAGGTGAGAAAACC,CACATTAAACAAGGGAACCGATGGTGAGAAAACA,CACATTAAACAAGGGAACCGATGGTGAGAAAACC,CACATTAAACAAGTCAACCGAAGGTGAGAAAACA,CACATTAAACAAGTCAACCGAAGGTGAGAAAACC,CACATTAAACAAGTCAACCGATGGTGAGAAAACA,CACATTAAACAAGTCAACCGATGGTGAGAAAACC,CACATTAAACACCCCGCGCGAAGGTGAGAAAACA,CACATTAAACACCCCGCGCGAAGGTGAGAAAACC,CACATTAAACACCCCGCGCGATGGTGAGAAAACA,CACATTAAACACCCCGCGCGATGGTGAGAAAACC,CACATTAAACACGGCAACCGAAGGTGAGAAAACA,CACATTAAACACGGCAACCGAAGGTGAGAAAACC,CACATTAAACACGGCAACCGATGGTGAGAAAACA,CACATTAAACACGGCAACCGATGGTGAGAAAACC,CACATTAAACACGGGAACAAATGGTGAGAAAACA,CACATTAAACACGGGAACAAATGGTGAGAAAACC,CACATTAAACACGGGAACCAAAGGTGAGAAAACA,CACATTAAACACGGGAACCAAAGGTGAGAAAACC,CACATTAAACACGGGAACCAATGGTGAGAAAACA,CACATTAAACACGGGAACCAATGGTGAGAAAACC,CACATTAAACACGGGAACCGAAGGTGAGAAAACA,CACATTAAACACGGGAACCGAAGGTGAGAAAACC,CACATTAAACACGGGAACCGATGGTGAGAAAACA,CACATTAAACACGGGAACCGATGGTGAGAAAACC,CACATTAAACACGTCAACCGAAGGTGAGAAAACA,CACATTAAACACGTCAACCGAAGGTGAGAAAACC,CACATTAAACACGTCAACCGATGGTGAGAAAACA,CACATTAAACACGTCAACCGATGGTGAGAAAACC,CACATTAAACACTGCAACCGAAGGTGAGAAAACA,CACATTAAACACTGCAACCGAAGGTGAGAAAACC,CACATTAAACACTGCAACCGATGGTGAGAAAACA,CACATTAAACACTGCAACCGATGGTGAGAAAACC,CACATTAAACACTGGAACAAATGGTGAGAAAACA,CACATTAAACACTGGAACAAATGGTGAGAAAACC,CACATTAAACACTGGAACCAAAGGTGAGAAAACA,CACATTAAACACTGGAACCAAAGGTGAGAAAACC,CACATTAAACACTGGAACCAATGGTGAGAAAACA,CACATTAAACACTGGAACCAATGGTGAGAAAACC,CACATTAAACACTGGAACCGAAGGTGAGAAAACA,CACATTAAACACTGGAACCGAAGGTGAGAAAACC,CACATTAAACACTGGAACCGATGGTGAGAAAACA,CACATTAAACACTGGAACCGATGGTGAGAAAACC,CACATTAAACACTTCAACCGAAGGTGAGAAAACA,CACATTAAACACTTCAACCGAAGGTGAGAAAACC,CACATTAAACACTTCAACCGATGGTGAGAAAACA,CACATTAAACACTTCAACCGATGGTGAGAAAACC,CACATTACAACCGGCAACCGAAGGTGAGAAAACA,CACATTACAACCGGCAACCGAAGGTGAGAAAACC,CACATTACAACCGGCAACCGATGGTGAGAAAACA,CACATTACAACCGGCAACCGATGGTGAGAAAACC,CACATTACAACCGGGAACAAATGGTGAGAAAACA,CACATTACAACCGGGAACAAATGGTGAGAAAACC,CACATTACAACCGGGAACCAAAGGTGAGAAAACA,CACATTACAACCGGGAACCAAAGGTGAGAAAACC,CACATTACAACCGGGAACCAATGGTGAGAAAACA,CACATTACAACCGGGAACCAATGGTGAGAAAACC,CACATTACAACCGGGAACCGAAGGTGAGAAAACA,CACATTACAACCGGGAACCGAAGGTGAGAAAACC,CACATTACAACCGGGAACCGATGGTGAGAAAACA,CACATTACAACCGGGAACCGATGGTGAGAAAACC,CACATTACAACCGTCAACCGAAGGTGAGAAAACA,CACATTACAACCGTCAACCGAAGGTGAGAAAACC,CACATTACAACCGTCAACCGATGGTGAGAAAACA,CACATTACAACCGTCAACCGATGGTGAGAAAACC,CACATTACAACCTGCAACCGAAGGTGAGAAAACA,CACATTACAACCTGCAACCGAAGGTGAGAAAACC,CACATTACAACCTGCAACCGATGGTGAGAAAACA,CACATTACAACCTGCAACCGATGGTGAGAAAACC,CACATTACAACCTGGAACAAATGGTGAGAAAACA,CACATTACAACCTGGAACAAATGGTGAGAAAACC,CACATTACAACCTGGAACCAAAGGTGAGAAAACA,CACATTACAACCTGGAACCAAAGGTGAGAAAACC,CACATTACAACCTGGAACCAATGGTGAGAAAACA,CACATTACAACCTGGAACCAATGGTGAGAAAACC,CACATTACAACCTGGAACCGAAGGTGAGAAAACA,CACATTACAACCTGGAACCGAAGGTGAGAAAACC,CACATTACAACCTGGAACCGATGGTGAGAAAACA,CACATTACAACCTGGAACCGATGGTGAGAAAACC,CACATTACAACCTTCAACCGAAGGTGAGAAAACA,CACATTACAACCTTCAACCGAAGGTGAGAAAACC,CACATTACAACCTTCAACCGATGGTGAGAAAACA,CACATTACAACCTTCAACCGATGGTGAGAAAACC,CTCACCATAAACACCGCGCGAAGGTGAGAAAACA,CTCACCATAAACACCGCGCGAAGGTGAGAAAACC,CTCACCATAAACACCGCGCGATGGTGAGAAAACA,CTCACCATAAACACCGCGCGATGGTGAGAAAACC,CTCACCATAGAAACCGCGCGAAGGTGAGAAAACA,CTCACCATAGAAACCGCGCGAAGGTGAGAAAACC,CTCACCATAGAAACCGCGCGATGGTGAGAAAACA,CTCACCATAGAAACCGCGCGATGGTGAGAAAACC,CTCACCATAGAACCCGCGCGAAGGTGAGAAAACA,CTCACCATAGAACCCGCGCGAAGGTGAGAAAACC,CTCACCATAGAACCCGCGCGATGGTGAGAAAACA,CTCACCATAGAACCCGCGCGATGGTGAGAAAACC,CTCACCATAGACACCGCGCGAAGGTGAGAAAACA,CTCACCATAGACACCGCGCGAAGGTGAGAAAACC,CTCACCATAGACACCGCGCGATGGTGAGAAAACA,CTCACCATAGACACCGCGCGATGGTGAGAAAACC,CTCACCATGAACACCGCGCGAAGGTGAGAAAACA,CTCACCATGAACACCGCGCGAAGGTGAGAAAACC,CTCACCATGAACACCGCGCGATGGTGAGAAAACA,CTCACCATGAACACCGCGCGATGGTGAGAAAACC,CTCACCATGGAAACCGCGCGAAGGTGAGAAAACA,CTCACCATGGAAACCGCGCGAAGGTGAGAAAACC,CTCACCATGGAAACCGCGCGATGGTGAGAAAACA,CTCACCATGGAAACCGCGCGATGGTGAGAAAACC,CTCACCATGGAACCCGCGCGAAGGTGAGAAAACA,CTCACCATGGAACCCGCGCGAAGGTGAGAAAACC,CTCACCATGGAACCCGCGCGATGGTGAGAAAACA,CTCACCATGGAACCCGCGCGATGGTGAGAAAACC,CTCACCATGGACACCGCGCGAAGGTGAGAAAACA,CTCACCATGGACACCGCGCGAAGGTGAGAAAACC,CTCACCATGGACACCGCGCGATGGTGAGAAAACA,CTCACCATGGACACCGCGCGATGGTGAGAAAACC,CTCACCATTAACACCGCGCGAAGGTGAGAAAACA,CTCACCATTAACACCGCGCGAAGGTGAGAAAACC,CTCACCATTAACACCGCGCGATGGTGAGAAAACA,CTCACCATTAACACCGCGCGATGGTGAGAAAACC,CTCATTAAACAACCCGCGCGAAGGTGAGAAAACA,CTCATTAAACAACCCGCGCGAAGGTGAGAAAACC,CTCATTAAACAACCCGCGCGATGGTGAGAAAACA,CTCATTAAACAACCCGCGCGATGGTGAGAAAACC,CTCATTAAACAAGGCAACCGAAGGTGAGAAAACA,CTCATTAAACAAGGCAACCGAAGGTGAGAAAACC,CTCATTAAACAAGGCAACCGATGGTGAGAAAACA,CTCATTAAACAAGGCAACCGATGGTGAGAAAACC,CTCATTAAACAAGGGAACAAATGGTGAGAAAACA,CTCATTAAACAAGGGAACAAATGGTGAGAAAACC,CTCATTAAACAAGGGAACCAAAGGTGAGAAAACA,CTCATTAAACAAGGGAACCAAAGGTGAGAAAACC,CTCATTAAACAAGGGAACCAATGGTGAGAAAACA,CTCATTAAACAAGGGAACCAATGGTGAGAAAACC,CTCATTAAACAAGGGAACCGAAGGTGAGAAAACA,CTCATTAAACAAGGGAACCGAAGGTGAGAAAACC,CTCATTAAACAAGGGAACCGATGGTGAGAAAACA,CTCATTAAACAAGGGAACCGATGGTGAGAAAACC,CTCATTAAACAAGTCAACCGAAGGTGAGAAAACA,CTCATTAAACAAGTCAACCGAAGGTGAGAAAACC,CTCATTAAACAAGTCAACCGATGGTGAGAAAACA,CTCATTAAACAAGTCAACCGATGGTGAGAAAACC,CTCATTAAACACCCCGCGCGAAGGTGAGAAAACA,CTCATTAAACACCCCGCGCGAAGGTGAGAAAACC,CTCATTAAACACCCCGCGCGATGGTGAGAAAACA,CTCATTAAACACCCCGCGCGATGGTGAGAAAACC,CTCATTAAACACGGCAACCGAAGGTGAGAAAACA,CTCATTAAACACGGCAACCGAAGGTGAGAAAACC,CTCATTAAACACGGCAACCGATGGTGAGAAAACA,CTCATTAAACACGGCAACCGATGGTGAGAAAACC,CTCATTAAACACGGGAACAAATGGTGAGAAAACA,CTCATTAAACACGGGAACAAATGGTGAGAAAACC,CTCATTAAACACGGGAACCAAAGGTGAGAAAACA,CTCATTAAACACGGGAACCAAAGGTGAGAAAACC,CTCATTAAACACGGGAACCAATGGTGAGAAAACA,CTCATTAAACACGGGAACCAATGGTGAGAAAACC,CTCATTAAACACGGGAACCGAAGGTGAGAAAACA,CTCATTAAACACGGGAACCGAAGGTGAGAAAACC,CTCATTAAACACGGGAACCGATGGTGAGAAAACA,CTCATTAAACACGGGAACCGATGGTGAGAAAACC,CTCATTAAACACGTCAACCGAAGGTGAGAAAACA,CTCATTAAACACGTCAACCGAAGGTGAGAAAACC,CTCATTAAACACGTCAACCGATGGTGAGAAAACA,CTCATTAAACACGTCAACCGATGGTGAGAAAACC,CTCATTAAACACTGCAACCGAAGGTGAGAAAACA,CTCATTAAACACTGCAACCGAAGGTGAGAAAACC,CTCATTAAACACTGCAACCGATGGTGAGAAAACA,CTCATTAAACACTGCAACCGATGGTGAGAAAACC,CTCATTAAACACTGGAACAAATGGTGAGAAAACA,CTCATTAAACACTGGAACAAATGGTGAGAAAACC,CTCATTAAACACTGGAACCAAAGGTGAGAAAACA,CTCATTAAACACTGGAACCAAAGGTGAGAAAACC,CTCATTAAACACTGGAACCAATGGTGAGAAAACA,CTCATTAAACACTGGAACCAATGGTGAGAAAACC,CTCATTAAACACTGGAACCGAAGGTGAGAAAACA,CTCATTAAACACTGGAACCGAAGGTGAGAAAACC,CTCATTAAACACTGGAACCGATGGTGAGAAAACA,CTCATTAAACACTGGAACCGATGGTGAGAAAACC,CTCATTAAACACTTCAACCGAAGGTGAGAAAACA,CTCATTAAACACTTCAACCGAAGGTGAGAAAACC,CTCATTAAACACTTCAACCGATGGTGAGAAAACA,CTCATTAAACACTTCAACCGATGGTGAGAAAACC,CTCATTACAACCGGCAACCGAAGGTGAGAAAACA,CTCATTACAACCGGCAACCGAAGGTGAGAAAACC,CTCATTACAACCGGCAACCGATGGTGAGAAAACA,CTCATTACAACCGGCAACCGATGGTGAGAAAACC,CTCATTACAACCGGGAACAAATGGTGAGAAAACA,CTCATTACAACCGGGAACAAATGGTGAGAAAACC,CTCATTACAACCGGGAACCAAAGGTGAGAAAACA,CTCATTACAACCGGGAACCAAAGGTGAGAAAACC,CTCATTACAACCGGGAACCAATGGTGAGAAAACA,CTCATTACAACCGGGAACCAATGGTGAGAAAACC,CTCATTACAACCGGGAACCGAAGGTGAGAAAACA,CTCATTACAACCGGGAACCGAAGGTGAGAAAACC,CTCATTACAACCGGGAACCGATGGTGAGAAAACA,CTCATTACAACCGGGAACCGATGGTGAGAAAACC,CTCATTACAACCGTCAACCGAAGGTGAGAAAACA,CTCATTACAACCGTCAACCGAAGGTGAGAAAACC,CTCATTACAACCGTCAACCGATGGTGAGAAAACA,CTCATTACAACCGTCAACCGATGGTGAGAAAACC,CTCATTACAACCTGCAACCGAAGGTGAGAAAACA,CTCATTACAACCTGCAACCGAAGGTGAGAAAACC,CTCATTACAACCTGCAACCGATGGTGAGAAAACA,CTCATTACAACCTGCAACCGATGGTGAGAAAACC,CTCATTACAACCTGGAACAAATGGTGAGAAAACA,CTCATTACAACCTGGAACAAATGGTGAGAAAACC,CTCATTACAACCTGGAACCAAAGGTGAGAAAACA,CTCATTACAACCTGGAACCAAAGGTGAGAAAACC,CTCATTACAACCTGGAACCAATGGTGAGAAAACA,CTCATTACAACCTGGAACCAATGGTGAGAAAACC,CTCATTACAACCTGGAACCGAAGGTGAGAAAACA,CTCATTACAACCTGGAACCGAAGGTGAGAAAACC,CTCATTACAACCTGGAACCGATGGTGAGAAAACA,CTCATTACAACCTGGAACCGATGGTGAGAAAACC,CTCATTACAACCTTCAACCGAAGGTGAGAAAACA,CTCATTACAACCTTCAACCGAAGGTGAGAAAACC,CTCATTACAACCTTCAACCGATGGTGAGAAAACA,CTCATTACAACCTTCAACCGATGGTGAGAAAACC'

    def test_Basics(self):
        assert common('ACGTC', 'TTACTC') == 'ACTC'
        assert common('TTACTC', 'ACGTC') == 'ACTC'
        assert common('CGCTA', 'TACCG') == 'CC,CG,TA'
        assert common('GCTT', 'AAAAA') == ''
        assert common('CGTCGTCGT', 'CGTACGT') == 'CGTCGT'
        assert common('TGCAAAACGT', 'ACGTAAAATGCA') == 'CAAAAC,CAAAAG,CAAAAT,GAAAAC,GAAAAG,GAAAAT,TAAAAC,TAAAAG,TAAAAT'
        assert common('GGGCCCAAA', 'AAACCCGGGG') == 'AAA,CCC,GGG'
