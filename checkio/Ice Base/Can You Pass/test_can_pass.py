import unittest

from can_pass import can_pass


class Tests(unittest.TestCase):
    TESTS = {
        "Basics": [
            {
                "input": (
                    (
                        (0, 0, 0, 0, 0, 0),
                        (0, 2, 2, 2, 3, 2),
                        (0, 2, 0, 0, 0, 2),
                        (0, 2, 0, 2, 0, 2),
                        (0, 2, 2, 2, 0, 2),
                        (0, 0, 0, 0, 0, 2),
                        (2, 2, 2, 2, 2, 2),
                    ),
                    (3, 2),
                    (0, 5),
                ),
                "answer": True,
            },
            {
                "input": (
                    (
                        (0, 0, 0, 0, 0, 0),
                        (0, 2, 2, 2, 3, 2),
                        (0, 2, 0, 0, 0, 2),
                        (0, 2, 0, 2, 0, 2),
                        (0, 2, 2, 2, 0, 2),
                        (0, 0, 0, 0, 0, 2),
                        (2, 2, 2, 2, 2, 2),
                    ),
                    (3, 3),
                    (6, 0),
                ),
                "answer": False,
            },
        ],
        "Edge": [
            {"input": [[[0, 0], [0, 0]], [0, 0], [1, 1]], "answer": True},
            {"input": [[[1, 9], [9, 1]], [0, 1], [1, 0]], "answer": False},
            {
                "input": [
                    [
                        [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
                        [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
                        [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
                        [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
                        [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
                        [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
                        [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
                        [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
                        [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
                        [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
                    ],
                    [0, 9],
                    [9, 0],
                ],
                "answer": True,
            },
            {
                "input": [
                    [
                        [5, 6],
                        [6, 6],
                        [6, 5],
                        [6, 6],
                        [7, 6],
                        [6, 6],
                        [6, 7],
                        [6, 6],
                        [8, 6],
                        [6, 6],
                    ],
                    [9, 1],
                    [0, 1],
                ],
                "answer": True,
            },
        ],
        "Extra": [
            {
                "input": [[[0, 5, 0, 5], [0, 0, 0, 5], [5, 5, 0, 5]], (1, 0), (1, 1)],
                "answer": True,
            },
            {
                "input": [
                    [
                        [1, 7, 8, 0, 5],
                        [7, 7, 8, 5, 7],
                        [4, 6, 5, 4, 0],
                        [4, 6, 8, 4, 7],
                        [1, 8, 2, 1, 1],
                        [3, 0, 4, 7, 4],
                    ],
                    (5, 2),
                    (5, 4),
                ],
                "answer": False,
            },
            {
                "input": [
                    [
                        [3, 3, 2, 2, 2],
                        [2, 2, 3, 3, 3],
                        [3, 3, 2, 2, 2],
                        [3, 2, 2, 2, 3],
                        [2, 3, 2, 2, 2],
                        [2, 3, 2, 3, 3],
                    ],
                    (5, 2),
                    (0, 2),
                ],
                "answer": False,
            },
            {
                "input": [
                    [[3, 3, 6, 0, 7, 4, 5, 5], [5, 2, 3, 5, 4, 2, 2, 5]],
                    (1, 2),
                    (0, 0),
                ],
                "answer": False,
            },
            {
                "input": [
                    [
                        [0, 0, 6, 0, 8, 6, 5, 6],
                        [0, 0, 8, 5, 0, 0, 6, 8],
                        [5, 6, 5, 6, 0, 6, 6, 5],
                        [8, 6, 8, 0, 0, 6, 8, 0],
                        [8, 6, 5, 6, 6, 8, 8, 0],
                    ],
                    (1, 1),
                    (3, 3),
                ],
                "answer": False,
            },
            {
                "input": [
                    [
                        [4, 6, 4, 9, 9, 9, 6, 6, 4],
                        [4, 6, 9, 9, 9, 9, 4, 6, 6],
                        [9, 9, 6, 9, 4, 9, 9, 4, 6],
                        [9, 4, 4, 4, 6, 9, 9, 4, 6],
                    ],
                    (2, 5),
                    (0, 4),
                ],
                "answer": True,
            },
            {
                "input": [
                    [
                        [4, 4, 4, 8, 4, 4, 4],
                        [6, 4, 6, 4, 8, 6, 4],
                        [6, 8, 6, 4, 8, 4, 6],
                        [6, 6, 4, 6, 8, 4, 6],
                        [8, 6, 8, 8, 6, 4, 6],
                    ],
                    (4, 1),
                    (2, 0),
                ],
                "answer": True,
            },
        ],
    }

    def test_Basics(self):
        for i in self.TESTS['Basics']:
            assert can_pass(*i['input']) == i['answer']

    def test_Edge(self):
        for i in self.TESTS['Edge']:
            assert can_pass(*i['input']) == i['answer']

    def test_Extra(self):
        for i in self.TESTS['Extra']:
            assert can_pass(*i['input']) == i['answer']


if __name__ == "__main__":  # pragma: no cover
    unittest.main()
