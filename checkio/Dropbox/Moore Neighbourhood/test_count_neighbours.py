import unittest

from count_neighbours import count_neighbours


class Tests(unittest.TestCase):
    TESTS = {
        "Basics": [
            {
                "input": (
                    (
                        (1, 0, 0, 1, 0),
                        (0, 1, 0, 0, 0),
                        (0, 0, 1, 0, 1),
                        (1, 0, 0, 0, 0),
                        (0, 0, 1, 0, 0),
                    ),
                    1,
                    2,
                ),
                "answer": 3,
            },
            {
                "input": (
                    (
                        (1, 0, 0, 1, 0),
                        (0, 1, 0, 0, 0),
                        (0, 0, 1, 0, 1),
                        (1, 0, 0, 0, 0),
                        (0, 0, 1, 0, 0),
                    ),
                    0,
                    0,
                ),
                "answer": 1,
            },
            {"input": (((1, 1, 1), (1, 1, 1), (1, 1, 1)), 0, 2), "answer": 3},
            {"input": (((0, 0, 0), (0, 1, 0), (0, 0, 0)), 1, 1), "answer": 0},
        ],
        "Extra": [
            {"input": [[[1, 1, 1], [1, 1, 1], [1, 1, 1]], 1, 2], "answer": 5},
            {
                "input": [
                    [
                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                        [1, 1, 1, 1, 0, 1, 1, 1, 1, 1],
                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                    ],
                    5,
                    5,
                ],
                "answer": 7,
            },
            {
                "input": [
                    [
                        [1, 0, 1, 0, 1],
                        [0, 1, 0, 1, 0],
                        [1, 0, 1, 0, 1],
                        [0, 1, 0, 1, 0],
                        [1, 0, 1, 0, 1],
                        [0, 1, 0, 1, 0],
                    ],
                    5,
                    4,
                ],
                "answer": 2,
            },
            {
                "input": [
                    [
                        [1, 0, 1, 0, 1],
                        [0, 1, 0, 1, 0],
                        [1, 0, 1, 0, 1],
                        [0, 1, 0, 1, 0],
                        [1, 1, 1, 0, 1],
                        [0, 1, 0, 1, 0],
                    ],
                    5,
                    0,
                ],
                "answer": 3,
            },
            {
                "input": [
                    [
                        [1, 1, 1, 0, 1, 1, 1, 0, 0, 1],
                        [1, 0, 0, 1, 1, 1, 1, 1, 0, 0],
                        [0, 1, 0, 0, 0, 0, 1, 1, 1, 1],
                        [1, 0, 1, 1, 1, 0, 1, 1, 1, 1],
                        [1, 1, 1, 0, 1, 1, 1, 1, 1, 1],
                        [0, 0, 0, 1, 1, 1, 1, 1, 1, 1],
                        [1, 0, 1, 1, 0, 0, 0, 1, 1, 1],
                        [0, 0, 1, 0, 0, 1, 0, 0, 1, 0],
                        [1, 0, 0, 0, 0, 1, 1, 1, 0, 1],
                        [1, 1, 0, 1, 1, 0, 1, 1, 0, 0],
                    ],
                    5,
                    6,
                ],
                "answer": 6,
            },
            {
                "input": [
                    [
                        [0, 1, 1, 0, 0, 0, 1, 1, 1, 1],
                        [0, 0, 0, 1, 1, 0, 0, 1, 1, 0],
                        [1, 0, 1, 1, 0, 0, 0, 1, 0, 1],
                        [1, 0, 1, 0, 0, 0, 0, 0, 0, 0],
                        [0, 0, 1, 1, 1, 0, 0, 1, 1, 0],
                        [1, 1, 1, 0, 0, 1, 0, 1, 1, 1],
                        [0, 0, 1, 0, 1, 1, 1, 0, 1, 1],
                        [0, 1, 0, 1, 0, 0, 1, 0, 1, 1],
                        [0, 1, 1, 0, 0, 0, 1, 1, 0, 0],
                        [0, 1, 1, 0, 1, 1, 1, 0, 0, 1],
                    ],
                    7,
                    6,
                ],
                "answer": 4,
            },
            {
                "input": [
                    [
                        [1, 0, 0, 0, 1, 0, 0, 1, 1, 0],
                        [0, 1, 0, 1, 0, 1, 1, 0, 0, 1],
                        [1, 1, 1, 1, 0, 1, 0, 0, 0, 1],
                        [0, 0, 1, 1, 0, 1, 0, 0, 0, 1],
                        [1, 1, 0, 1, 1, 0, 1, 0, 0, 1],
                        [0, 1, 1, 1, 0, 0, 1, 1, 1, 0],
                        [1, 1, 1, 0, 0, 0, 0, 0, 1, 1],
                        [0, 0, 0, 1, 0, 1, 0, 0, 1, 1],
                        [0, 0, 0, 1, 0, 1, 0, 1, 0, 1],
                        [1, 1, 0, 0, 0, 1, 0, 1, 1, 1],
                    ],
                    9,
                    8,
                ],
                "answer": 4,
            },
            {
                "input": [
                    [
                        [1, 1, 0, 1, 0, 0, 0, 1, 1, 0],
                        [1, 1, 1, 0, 0, 0, 1, 0, 1, 1],
                        [0, 1, 0, 0, 1, 0, 1, 0, 1, 0],
                        [0, 1, 0, 1, 0, 0, 0, 1, 1, 1],
                        [1, 0, 1, 1, 1, 1, 0, 1, 1, 0],
                        [1, 1, 1, 0, 0, 0, 0, 0, 1, 1],
                        [0, 1, 0, 0, 0, 0, 1, 0, 0, 0],
                        [1, 1, 0, 0, 1, 1, 0, 0, 0, 1],
                        [0, 1, 0, 1, 0, 0, 0, 1, 0, 0],
                        [1, 0, 1, 0, 0, 0, 1, 1, 1, 1],
                    ],
                    9,
                    7,
                ],
                "answer": 3,
            },
            {
                "input": [
                    [
                        [0, 1, 1, 1, 1, 0, 0, 0, 1, 0],
                        [1, 0, 0, 0, 1, 1, 0, 0, 0, 1],
                        [0, 0, 0, 1, 0, 1, 0, 1, 0, 0],
                        [1, 1, 0, 1, 1, 1, 1, 1, 1, 1],
                        [0, 0, 1, 1, 1, 1, 1, 0, 0, 0],
                        [0, 0, 0, 1, 1, 0, 0, 0, 1, 1],
                        [0, 0, 0, 0, 0, 1, 1, 0, 1, 1],
                        [0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
                        [0, 1, 1, 1, 0, 0, 1, 0, 1, 1],
                        [1, 0, 0, 0, 0, 0, 0, 1, 0, 0],
                    ],
                    7,
                    5,
                ],
                "answer": 5,
            },
            {
                "input": [
                    [
                        [0, 0, 0, 0, 0, 1, 0, 0, 1, 0],
                        [1, 1, 0, 1, 0, 1, 0, 0, 0, 0],
                        [0, 1, 1, 0, 0, 1, 1, 1, 1, 0],
                        [0, 1, 0, 1, 0, 0, 0, 1, 1, 1],
                        [0, 0, 1, 0, 1, 1, 1, 0, 1, 1],
                        [0, 1, 0, 1, 0, 0, 1, 1, 1, 0],
                        [0, 1, 1, 0, 0, 1, 0, 1, 0, 0],
                        [0, 1, 0, 1, 1, 1, 1, 1, 0, 1],
                        [0, 1, 1, 0, 1, 0, 0, 0, 1, 1],
                        [0, 1, 0, 0, 0, 1, 1, 1, 0, 0],
                    ],
                    7,
                    2,
                ],
                "answer": 6,
            },
            {
                "input": [
                    [
                        [1, 1, 1, 1, 0, 1, 1, 0, 0, 0],
                        [0, 1, 1, 1, 1, 0, 1, 1, 0, 0],
                        [0, 0, 0, 0, 1, 1, 0, 0, 1, 0],
                        [1, 1, 1, 1, 0, 1, 0, 0, 0, 0],
                        [0, 1, 0, 0, 1, 1, 0, 0, 1, 1],
                        [1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                        [1, 0, 0, 0, 1, 0, 1, 1, 1, 1],
                        [1, 1, 1, 0, 1, 1, 1, 0, 1, 0],
                        [0, 1, 0, 0, 0, 1, 0, 1, 1, 1],
                        [0, 0, 1, 1, 0, 0, 0, 1, 0, 0],
                    ],
                    7,
                    9,
                ],
                "answer": 5,
            },
            {
                "input": [
                    [
                        [1, 1, 1, 0, 1, 0, 0, 0, 0, 1],
                        [1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
                        [0, 0, 1, 0, 0, 0, 0, 1, 1, 0],
                        [1, 1, 0, 0, 1, 0, 1, 1, 1, 1],
                        [0, 0, 0, 1, 0, 1, 0, 1, 1, 1],
                        [0, 1, 0, 0, 1, 0, 0, 1, 0, 0],
                        [0, 1, 1, 0, 0, 1, 1, 0, 0, 1],
                        [0, 1, 1, 0, 0, 0, 0, 1, 1, 0],
                        [0, 0, 1, 1, 0, 1, 1, 0, 1, 0],
                        [1, 0, 1, 0, 1, 1, 0, 0, 1, 0],
                    ],
                    2,
                    9,
                ],
                "answer": 3,
            },
            {
                "input": [
                    [
                        [0, 0, 1, 0, 1, 1, 0, 1, 1, 1],
                        [0, 0, 1, 0, 0, 1, 1, 1, 0, 1],
                        [0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
                        [0, 0, 1, 0, 0, 0, 0, 0, 0, 1],
                        [0, 0, 1, 0, 1, 1, 0, 1, 0, 0],
                        [0, 1, 0, 1, 1, 1, 0, 0, 1, 0],
                        [1, 0, 0, 1, 1, 0, 0, 1, 0, 1],
                        [0, 1, 1, 0, 0, 1, 1, 0, 0, 0],
                        [0, 1, 0, 1, 0, 0, 1, 1, 0, 0],
                        [1, 1, 0, 1, 1, 1, 0, 1, 1, 1],
                    ],
                    8,
                    3,
                ],
                "answer": 3,
            },
            {
                "input": [
                    [
                        [0, 0, 0, 1, 1, 0, 0, 0, 0, 0],
                        [1, 1, 1, 0, 0, 0, 1, 1, 1, 0],
                        [1, 1, 0, 1, 0, 0, 0, 1, 0, 0],
                        [1, 0, 0, 0, 0, 1, 1, 0, 0, 0],
                        [1, 0, 0, 1, 1, 0, 1, 0, 0, 0],
                        [0, 1, 0, 1, 0, 0, 0, 1, 1, 1],
                        [1, 1, 1, 0, 0, 0, 0, 0, 0, 1],
                        [1, 1, 0, 1, 1, 0, 0, 1, 1, 0],
                        [0, 1, 0, 1, 0, 1, 0, 0, 0, 1],
                        [1, 1, 1, 0, 1, 1, 0, 0, 0, 0],
                    ],
                    5,
                    1,
                ],
                "answer": 4,
            },
            {
                "input": [
                    [
                        [0, 1, 0, 1, 0, 1, 0, 0, 1, 1],
                        [0, 1, 1, 0, 0, 0, 0, 1, 1, 1],
                        [0, 1, 0, 0, 0, 1, 1, 0, 0, 0],
                        [1, 0, 1, 1, 0, 1, 1, 1, 1, 1],
                        [0, 1, 0, 0, 1, 1, 0, 0, 1, 0],
                        [0, 1, 1, 1, 1, 0, 1, 0, 0, 0],
                        [1, 0, 1, 0, 0, 0, 1, 0, 0, 0],
                        [0, 0, 0, 1, 0, 0, 0, 0, 1, 0],
                        [0, 1, 0, 1, 0, 0, 1, 1, 1, 1],
                        [1, 0, 0, 0, 1, 0, 0, 1, 0, 0],
                    ],
                    0,
                    7,
                ],
                "answer": 3,
            },
        ],
    }

    def test_Basics(self):
        for i in self.TESTS['Basics']:
            assert count_neighbours(*i['input']) == i['answer']

    def test_Extra(self):
        for i in self.TESTS['Extra']:
            assert count_neighbours(*i['input']) == i['answer']


if __name__ == "__main__":  # pragma: no cover
    unittest.main()
