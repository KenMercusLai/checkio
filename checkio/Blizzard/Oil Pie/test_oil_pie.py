import unittest

from oil_pie import divide_pie


class Tests(unittest.TestCase):
    TESTS = {
        "Basics": [
            {
                "input": (2, -1, 3),
                "answer": [1, 18],
                "show": "(2, -1, 3)",
                "explanation": [[1, 1], [2, 3], [5, 9], [1, 18]],
            },
            {
                "input": (1, 2, 3),
                "answer": [0, 1],
                "show": "(1, 2, 3)",
                "explanation": [[1, 1], [5, 6], [1, 2], [0, 1]],
            },
            {
                "input": (-1, -1, -1),
                "answer": [8, 27],
                "show": "(-1, -1, -1)",
                "explanation": [[1, 1], [2, 3], [4, 9], [8, 27]],
            },
            {
                "input": (10,),
                "answer": [0, 1],
                "show": "(10,)",
                "explanation": [[1, 1], [0, 1]],
            },
        ],
        "Edge": [
            {
                "input": (99, -99),
                "answer": [1, 4],
                "show": "(99, -99)",
                "explanation": [[1, 1], [1, 2], [1, 4]],
            },
            {
                "input": [
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    -1,
                ],
                "answer": [99, 10000],
                "show": "[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1]",
                "explanation": [
                    [1, 1],
                    [99, 100],
                    [49, 50],
                    [97, 100],
                    [24, 25],
                    [19, 20],
                    [47, 50],
                    [93, 100],
                    [23, 25],
                    [91, 100],
                    [9, 10],
                    [89, 100],
                    [22, 25],
                    [87, 100],
                    [43, 50],
                    [17, 20],
                    [21, 25],
                    [83, 100],
                    [41, 50],
                    [81, 100],
                    [4, 5],
                    [79, 100],
                    [39, 50],
                    [77, 100],
                    [19, 25],
                    [3, 4],
                    [37, 50],
                    [73, 100],
                    [18, 25],
                    [71, 100],
                    [7, 10],
                    [69, 100],
                    [17, 25],
                    [67, 100],
                    [33, 50],
                    [13, 20],
                    [16, 25],
                    [63, 100],
                    [31, 50],
                    [61, 100],
                    [3, 5],
                    [59, 100],
                    [29, 50],
                    [57, 100],
                    [14, 25],
                    [11, 20],
                    [27, 50],
                    [53, 100],
                    [13, 25],
                    [51, 100],
                    [1, 2],
                    [49, 100],
                    [12, 25],
                    [47, 100],
                    [23, 50],
                    [9, 20],
                    [11, 25],
                    [43, 100],
                    [21, 50],
                    [41, 100],
                    [2, 5],
                    [39, 100],
                    [19, 50],
                    [37, 100],
                    [9, 25],
                    [7, 20],
                    [17, 50],
                    [33, 100],
                    [8, 25],
                    [31, 100],
                    [3, 10],
                    [29, 100],
                    [7, 25],
                    [27, 100],
                    [13, 50],
                    [1, 4],
                    [6, 25],
                    [23, 100],
                    [11, 50],
                    [21, 100],
                    [1, 5],
                    [19, 100],
                    [9, 50],
                    [17, 100],
                    [4, 25],
                    [3, 20],
                    [7, 50],
                    [13, 100],
                    [3, 25],
                    [11, 100],
                    [1, 10],
                    [9, 100],
                    [2, 25],
                    [7, 100],
                    [3, 50],
                    [1, 20],
                    [1, 25],
                    [3, 100],
                    [1, 50],
                    [1, 100],
                    [99, 10000],
                ],
            },
        ],
        "Extra": [
            {
                "input": [6, -4, 6, 24, 23, 65],
                "answer": [3, 2048],
                "show": "[6, -4, 6, 24, 23, 65]",
                "explanation": [
                    [1, 1],
                    [61, 64],
                    [1891, 2048],
                    [1795, 2048],
                    [1411, 2048],
                    [1043, 2048],
                    [3, 2048],
                ],
            },
            {
                "input": [83, 81],
                "answer": [0, 1],
                "show": "[83, 81]",
                "explanation": [[1, 1], [81, 164], [0, 1]],
            },
            {
                "input": [15, 33, 37, 16, -1, 22, -73, 66, -59, 10, -39, 57],
                "answer": [2_682_139_399_739, 14_362_129_722_368],
                "show": "[15, 33, 37, 16, -1, 22, -73, 66, -59, 10, -39, 57]",
                "explanation": [
                    [1, 1],
                    [413, 428],
                    [95, 107],
                    [343, 428],
                    [327, 428],
                    [139_629, 183_184],
                    [130_213, 183_184],
                    [46_225_615, 78_402_752],
                    [34_135_471, 78_402_752],
                    [12_595_988_799, 33_556_377_856],
                    [11_811_961_279, 33_556_377_856],
                    [4_594_852_937_531, 14_362_129_722_368],
                    [2_682_139_399_739, 14_362_129_722_368],
                ],
            },
            {
                "input": [
                    -86,
                    94,
                    3,
                    22,
                    30,
                    -63,
                    72,
                    64,
                    -52,
                    -98,
                    93,
                    -42,
                    52,
                    -35,
                    -52,
                    58,
                    -5,
                    90,
                    70,
                    76,
                ],
                "answer": [
                    2_418_384_304_303_700_202_212,
                    19_001_162_276_662_055_889_529,
                ],
                "show_answer": "[2418384304303700202212, 19001162276662055889529]",
                "show": "[-86, 94, 3, 22, 30, -63, 72, 64, -52, -98, 93, -42, 52, -35, -52, 58, -5, 90, 70, 76]",
                "explanation": [
                    [1, 1],
                    [1071, 1157],
                    [977, 1157],
                    [974, 1157],
                    [952, 1157],
                    [922, 1157],
                    [1_008_668, 1_338_649],
                    [925_364, 1_338_649],
                    [851_316, 1_338_649],
                    [72_361_860, 119_139_761],
                    [76_631_209_740, 137_844_703_477],
                    [65_551_211_967, 137_844_703_477],
                    [73_089_601_343_205, 159_486_321_922_889],
                    [65_921_676_762_401, 159_486_321_922_889],
                    [73_964_121_327_413_922, 184_525_674_464_782_573],
                    [6_286_950_312_830_183_370, 16_422_785_027_365_648_997],
                    [5_463_681_919_064_230_352, 16_422_785_027_365_648_997],
                    [6_294_161_570_761_993_365_504, 19_001_162_276_662_055_889_529],
                    [4_816_110_918_299_084_955_774, 19_001_162_276_662_055_889_529],
                    [3_666_515_966_383_489_525_984, 19_001_162_276_662_055_889_529],
                    [2_418_384_304_303_700_202_212, 19_001_162_276_662_055_889_529],
                ],
            },
            {
                "input": [
                    -2,
                    -19,
                    -85,
                    -73,
                    -80,
                    -88,
                    70,
                    -66,
                    71,
                    17,
                    -53,
                    9,
                    -87,
                    -94,
                    33,
                    64,
                    91,
                    95,
                    94,
                    -52,
                ],
                "answer": [
                    14_944_169_998_518_287_933_224_442_117_487,
                    90_447_599_430_824_330_991_026_825_693_467,
                ],
                "show_answer": "[14944169998518287933224442117487, 90447599430824330991026825693467]",
                "show": "[-2, -19, -85, -73, -80, -88, 70, -66, 71, 17, -53, 9, -87, -94, 33, 64, 91, 95, 94, -52]",
                "explanation": [
                    [1, 1],
                    [1241, 1243],
                    [1_518_984, 1_545_049],
                    [1_758_983_472, 1_920_495_907],
                    [2_058_010_662_240, 2_387_176_412_401],
                    [2_393_466_400_185_120, 2_967_260_280_614_443],
                    [251_313_972_019_437_600, 335_300_411_709_432_059],
                    [232_431_406_597_345_690, 335_300_411_709_432_059],
                    [24_870_160_505_915_988_830, 37_888_946_523_165_822_667],
                    [22_705_948_757_609_654_631, 37_888_946_523_165_822_667],
                    [22_187_757_212_240_532_358, 37_888_946_523_165_822_667],
                    [26_403_431_082_566_233_506_020, 47_095_960_528_295_117_575_081],
                    [26_062_430_563_857_741_102_017, 47_095_960_528_295_117_575_081],
                    [
                        30_128_169_731_819_548_713_931_652,
                        58_540_278_936_670_831_145_825_683,
                    ],
                    [
                        34_617_267_021_860_661_472_307_468_148,
                        72_765_566_718_281_843_114_261_323_969,
                    ],
                    [
                        32_685_437_816_950_524_044_495_220_609,
                        72_765_566_718_281_843_114_261_323_969,
                    ],
                    [
                        28_938_859_965_003_590_851_162_376_897,
                        72_765_566_718_281_843_114_261_323_969,
                    ],
                    [
                        23_611_694_581_766_545_216_892_239_744,
                        72_765_566_718_281_843_114_261_323_969,
                    ],
                    [
                        18_050_368_082_782_816_258_038_799_859,
                        72_765_566_718_281_843_114_261_323_969,
                    ],
                    [
                        12_547_581_862_735_758_130_331_185_657,
                        72_765_566_718_281_843_114_261_323_969,
                    ],
                    [
                        14_944_169_998_518_287_933_224_442_117_487,
                        90_447_599_430_824_330_991_026_825_693_467,
                    ],
                ],
            },
        ],
    }

    def test_Basics(self):
        for i in self.TESTS['Basics']:
            assert divide_pie(i['input']) == tuple(i['answer'])

    def test_Edge(self):
        for i in self.TESTS['Edge']:
            assert divide_pie(i['input']) == tuple(i['answer'])

    def test_Extra(self):
        for i in self.TESTS['Extra']:
            assert divide_pie(i['input']) == tuple(i['answer'])


if __name__ == "__main__":  # pragma: no cover
    unittest.main()
